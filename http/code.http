# https://www.jetbrains.com/help/idea/http-client-in-product-code-editor.html

### 코드 목록 조회
# @name listCodes
< {%
    // 전역 변수 "host" 가져오기
    const host = client.global.get("host");
    // 전역 변수 "port" 가져오기
    const port = client.global.get("port");

    // "host"가 없으면 "http://localhost"로 설정
    if (!host) {
        client.global.set("host", "http://localhost");
    }

    // "port"가 없으면 "8080"으로 설정
    if (!port) {
        client.global.set("port", "8080");
    }
%}
GET {{host}}:{{port}}/api/codes
Accept: application/json
Content-Type: application/json

> {%
    client.test("Response status should be 200", function () {
        client.assert(response.status === 200, "Response status is not 200!");
    });
%}

### 코드 등록
# @name createCode
POST {{host}}:{{port}}/api/codes
Accept: application/json
Content-Type: application/json

{
  "codeId": "TEST001",
  "parCodeId": null,
  "codeName": "테스트 코드",
  "codeValue": "T001",
  "codeExplanation": "테스트를 위한 코드",
  "useYn": "Y",
  "sortNumber": 1
}

> {%
    client.test("Response status should be 201", function () {
        client.assert(response.status === 201, "Response status is not 201!");
    });

    if (response.status === 201) {
        client.global.set("codeId", response.body.codeId)
    }
%}

### 단일 코드 조회
# @name getCodeById
< {%
    const id = client.global.get("id");

    if (!id) {
        throw new Error("User ID is not set in global variables");
    }
%}
GET {{host}}:{{port}}/api/codes/{{codeId}}
Accept: application/json

> {%
    client.test("Response status should be 200", function () {
        client.assert(response.status === 200, "Response status is not 200!");
    });
%}

### 상위 코드로 하위 코드 목록 조회
# @name listCodesByParentId
GET {{host}}:{{port}}/api/codes/parent/GENDER
Accept: application/json

> {%
    client.test("Response status should be 200", function () {
        client.assert(response.status === 200, "Response status is not 200!");
    });
%}


### 단일 코드 수정
# @name updateCode
< {%
    const id = client.global.get("id");

    if (!id) {
        throw new Error("User ID is not set in global variables");
    }
%}
PUT {{host}}:{{port}}/api/codes/{{codeId}}
Content-Type: application/json
Accept: application/json

{
  "codeId": "{{codeId}}",
  "parCodeId": null,
  "codeName": "수정된 테스트 코드",
  "codeValue": "T001_UPD",
  "codeExplanation": "수정된 테스트 코드 설명",
  "useYn": "Y",
  "sortNumber": 2
}

> {%
    client.test("Response status should be 200", function () {
        client.assert(response.status === 200, "Response status is not 200!");
    });
%}

### 코드 계층 구조 조회
# @name getCodeHierarchy
GET {{host}}:{{port}}/api/codes/hierarchy
Accept: application/json

> {%
    client.test("Response status should be 200", function () {
        client.assert(response.status === 200, "Response status is not 200!");
    });
%}

### 활성 코드 목록 조회
# @name listActiveCodes
GET {{host}}:{{port}}/api/codes/active
Accept: application/json

> {%
    client.test("Response status should be 200", function () {
        client.assert(response.status === 200, "Response status is not 200!");
    });
%}

### 단일 코드 삭제
# @name deleteCode
< {%
    const id = client.global.get("id");

    if (!id) {
        throw new Error("User ID is not set in global variables");
    }
%}
DELETE {{host}}:{{port}}/api/codes/{{codeId}}
Accept: application/json

> {%
    client.test("Response status should be 204", function () {
        client.assert(response.status === 204, "Response status is not 204!");
    });
%}